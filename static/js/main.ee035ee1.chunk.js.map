{"version":3,"sources":["data/tabs lazy /^/.*/.md$/ groupOptions: {} namespace object","theme/icons.ts","theme/dimens.ts","theme/fonts.ts","layouts/Main/components/Header/NavBar/NavItem/styles.ts","theme/colors.ts","layouts/Main/components/Header/NavBar/NavItem/index.tsx","layouts/Main/components/Header/NavBar/styles.ts","layouts/Main/components/Header/NavBar/index.tsx","layouts/Main/components/Header/styles.ts","layouts/Main/components/Header/index.tsx","components/IconLink/styles.ts","components/IconLink/index.tsx","components/ButtonLink/styles.ts","components/ButtonLink/index.tsx","utils/localStorage.ts","components/GHButton/index.tsx","hooks/useLocalStorageState.ts","views/Greeter/components/MainButtons/index.tsx","views/Greeter/components/MainButtons/styles.ts","utils/paths.ts","components/SEO/index.tsx","views/Greeter/styles.ts","views/Greeter/index.tsx","utils/helpers.ts","data/index.tsx","layouts/Main/components/LeftBar/styles.ts","layouts/Main/components/LeftBar/index.tsx","layouts/Main/components/Explorer/styles.ts","layouts/Main/components/Explorer/index.tsx","layouts/Main/components/StatusBar/styles.ts","layouts/Main/components/StatusBar/index.tsx","layouts/Main/styles.ts","layouts/Main/index.tsx","components/Container/styles.ts","components/Container/index.tsx","components/MDTab/index.tsx","components/MDTab/styles.ts","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","library","add","fab","faHome","faGraduationCap","faCheckSquare","faCoffee","faSlidersH","faUniversity","faCodeBranch","faTimes","faSmile","faStar","faCopy","faSearch","faCog","faQuestionCircle","breakpoints","widths","heights","sansFont","root","display","navText","marginLeft","currentTab","color","paddingLeft","otherTab","useStyles","createUseStyles","styles","NavItem","name","url","iconProps","mdFileName","classes","className","to","getProps","isCurrent","size","onClick","preventDefault","stopPropagation","navigate","icon","title","fontFamily","height","list","listStyle","margin","padding","listItem","borderRight","Color","darken","string","borderTop","cursor","fontSize","letterSpacing","textTransform","transition","borderTopColor","background","lighten","Navbar","tabs","tab","key","position","top","left","width","Header","NavBar","link","marginBottom","iconWrapper","badge","right","backgroundColor","borderRadius","opacity","IconLink","isInternal","iconComp","aria-label","href","target","rel","contents","alignItems","minHeight","text","fontWeight","count","ButtonLink","showCount","buildRecordObject","data","lastChecked","Date","now","isRecordUsable","record","timeout","undefined","isRecordExpired","GHButton","resource","attr","endpoint","btnProps","useState","loading","setLoading","defaultValue","value","defaultObj","JSON","parse","window","localStorage","getItem","stringify","state","setState","useEffect","setItem","useLocalStorageState","attrCountRecord","setAttrCountRecord","fetchApi","fetch","response","json","flexDirection","marginTop","justifyContent","MainButtons","contactData","repoUrl","parts","URL","pathname","split","repo","pop","username","getGHCredentials","ghButtons","mainContact","find","c","isMain","btn","SEO","description","lang","meta","metaDescription","metadata","Helmet","htmlAttributes","titleTemplate","content","keywords","homepage","themeColor","property","image","verification","google","concat","heading","textShadow","userSelect","typedWrap","textDecoration","borderBottom","Greeter","staticData","options","strings","typed","typeSpeed","backSpeed","loop","smartBackspace","Typed","destroy","hello","randomInt","Math","floor","random","length","randomHello","mainLine","style","whiteSpace","pages","comp","pkg","repository","divider","LeftBar","internals","renderData","contactItem","closed","Explorer","open","clsx","bottom","StatusBar","inverse","html","body","boxSizing","button","a","transform","explorerOpen","MainLayout","children","maxWidth","paddingBottom","Container","seo","mdpage","MDTab","fileName","setContents","file","default","loadFile","source","View","Comp","rest","Tab","path","from","noThrow","App","Main","routes","Boolean","location","hostname","match","dotenv","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee035ee1.chunk.js","sourcesContent":["var map = {\n\t\"./certificates.md\": [\n\t\t158,\n\t\t3\n\t],\n\t\"./education.md\": [\n\t\t159,\n\t\t4\n\t],\n\t\"./projects.md\": [\n\t\t160,\n\t\t5\n\t],\n\t\"./skills.md\": [\n\t\t161,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faHome,\r\n  faGraduationCap,\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faSlidersH,\r\n  faUniversity,\r\n  faCodeBranch,\r\n  faTimes,\r\n  faSmile,\r\n  faStar,\r\n  faCopy,\r\n  faSearch,\r\n  faCog,\r\n  faQuestionCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n  fab,\r\n  faHome,\r\n  faGraduationCap,\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faSlidersH,\r\n  faUniversity,\r\n  faCodeBranch,\r\n  faTimes,\r\n  faSmile,\r\n  faStar,\r\n  faCopy,\r\n  faSearch,\r\n  faCog,\r\n  faQuestionCircle,\r\n);\r\n","/**\r\n * Dimensions.\r\n */\r\nexport const sSize = '1.2rem';\r\nexport const msSize = '1.4rem';\r\nexport const mSize = '1.6rem';\r\nexport const mlSize = '2.0rem';\r\nexport const mllSize = '2.4rem';\r\nexport const lSize = '3.2rem';\r\nexport const xlSize = '4.8rem';\r\n\r\nexport const breakpoints = {\r\n  desktop: '45rem',\r\n};\r\n\r\nexport const widths = {\r\n  leftBar: 50,\r\n  explorer: 200,\r\n};\r\n\r\nexport const heights = {\r\n  navBar: 40,\r\n  statusBar: 22,\r\n};\r\n","/**\r\n * App fonts.\r\n */\r\nexport const sansFont = \"'Ubuntu', sans-serif\";\r\nexport const monoFont = \"'Ubuntu Mono', monospace\";\r\n","/**\r\n * NavItem component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport { breakpoints, textLightBlue, textWhite } from '../../../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    '& a[aria-current=\"page\"] span': {\r\n      display: 'inline-block !important',\r\n    },\r\n  },\r\n  navText: {\r\n    marginLeft: '8px',\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  currentTab: {\r\n    '& .closeButton': {\r\n      color: textLightBlue,\r\n      marginLeft: '8px',\r\n      paddingLeft: '8px',\r\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n        paddingLeft: '8px',\r\n      },\r\n      '&:hover': {\r\n        color: textWhite,\r\n      },\r\n    },\r\n  },\r\n  otherTab: {\r\n    '& .closeButton': {\r\n      display: 'none',\r\n    },\r\n  },\r\n} as Styles;\r\n","/**\r\n * App colors.\r\n */\r\nexport const bgDarkBlue = '#21252b';\r\nexport const bgMidBlue = '#282c34';\r\nexport const bgLightBlue = '#333842';\r\nexport const lbIconColor = '#9599a0';\r\n\r\nexport const textWhite = '#f3f3f3';\r\nexport const textMid = '#c2c2c2';\r\nexport const textDark = '#909295';\r\nexport const textBlue = '#636d83';\r\nexport const textLightBlue = '#abb2bf';\r\n\r\nexport const green = '#98c379';\r\nexport const red = '#e06c75';\r\nexport const cyan = '#56b6c2';\r\nexport const midBlue = '#42a5f5';\r\nexport const orange = '#d19a66';\r\nexport const jsOrange = '#ffca28';\r\nexport const darkOrange = '#e44d26';\r\nexport const lightBrown = '#6e6352';\r\nexport const pink = '#e13e76';\r\nexport const purple = '#c678dd';\r\n","/**\r\n * NavItem component.\r\n */\r\nimport React from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { TabSpec, TabLink } from '../../../../../../models';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nconst NavItem: React.FC<TabSpec & TabLink> = ({\r\n  name,\r\n  url,\r\n  mdFileName, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n  ...iconProps\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const onCloseClicked = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <span className={classes.root}>\r\n      <Link\r\n        to={url}\r\n        getProps={({ isCurrent }) => {\r\n          return {\r\n            className: isCurrent ? classes.currentTab : classes.otherTab,\r\n          };\r\n        }}\r\n      >\r\n        <FontAwesomeIcon {...iconProps} size={iconProps.size || 'lg'} />\r\n        <span className={classes.navText}>{name}</span>\r\n        <FontAwesomeIcon\r\n          onClick={onCloseClicked}\r\n          className=\"closeButton\"\r\n          icon=\"times\"\r\n          size=\"1x\"\r\n          title=\"Close\"\r\n        />\r\n      </Link>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","/**\r\n * NavBar component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport Color from 'color';\r\nimport {\r\n  bgMidBlue,\r\n  bgDarkBlue,\r\n  textWhite,\r\n  textLightBlue,\r\n  sSize,\r\n  breakpoints,\r\n  sansFont,\r\n  heights,\r\n} from '../../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    fontFamily: sansFont,\r\n    height: heights.navBar,\r\n  },\r\n  list: {\r\n    color: textLightBlue,\r\n    listStyle: 'none',\r\n    margin: '0',\r\n    padding: '0',\r\n  },\r\n  listItem: {\r\n    display: 'inline-block',\r\n    '& a': {\r\n      borderRight: `1px solid ${Color(bgMidBlue).darken(0.05).string()}`,\r\n      borderTop: `4px solid ${bgDarkBlue}`,\r\n      cursor: 'pointer',\r\n      display: 'inline-block',\r\n      fontSize: sSize,\r\n      letterSpacing: '0.5px',\r\n      padding: '10px 15px',\r\n      textTransform: 'lowercase',\r\n      transition: 'background, border-color 250ms ease',\r\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n        letterSpacing: '0',\r\n        padding: '10px',\r\n      },\r\n      '&:hover, &[aria-current=\"page\"]': {\r\n        borderTopColor: bgDarkBlue,\r\n        background: Color(bgDarkBlue).lighten(0.02).string(),\r\n        color: textWhite,\r\n      },\r\n      '&[aria-current=\"page\"]': {\r\n        background: bgMidBlue,\r\n        borderTopColor: Color(bgDarkBlue).lighten(0.05).string(),\r\n      },\r\n    },\r\n  },\r\n} as Styles;\r\n","/**\r\n * NavBar component.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport NavItem from './NavItem';\r\nimport { TabProps } from '../../..';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nconst Navbar: React.FC<TabProps> = ({ tabs }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <nav className={classes.root}>\r\n      <ul className={classes.list}>\r\n        {tabs.map((tab) => (\r\n          <li className={classes.listItem} key={tab.name}>\r\n            <NavItem {...tab} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/**\r\n * Header component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport { bgDarkBlue, heights } from '../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    background: bgDarkBlue,\r\n    position: 'sticky',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: heights.navBar,\r\n  },\r\n} as Styles;\r\n","/**\r\n * Header component.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport NavBar from './NavBar';\r\nimport { TabProps } from '../..';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nconst Header: React.FC<TabProps> = ({ tabs }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header className={classes.root}>\r\n      <NavBar tabs={tabs} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * IconLink component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport Color from 'color';\r\nimport { lbIconColor, green } from '../../theme';\r\n\r\nexport default {\r\n  link: {\r\n    color: lbIconColor,\r\n    cursor: 'pointer',\r\n    marginBottom: '10px',\r\n    transition: 'color 100ms ease',\r\n    '&:hover': {\r\n      color: Color(lbIconColor).lighten(0.2).string(),\r\n    },\r\n    '&:last-of-type': {\r\n      marginBottom: '20px',\r\n    },\r\n  },\r\n  iconWrapper: {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n  },\r\n  icon: {\r\n    padding: '10px',\r\n  },\r\n  badge: {\r\n    position: 'absolute',\r\n    right: '4px',\r\n    top: '4px',\r\n    fontSize: '0.8em',\r\n    backgroundColor: green,\r\n    borderRadius: '4px',\r\n    color: '#111',\r\n    padding: '1px 2px',\r\n    opacity: '0.9',\r\n  },\r\n} as Styles;\r\n","/**\r\n * IconLink component.\r\n */\r\nimport React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { ContactItem } from '../../models';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nconst IconLink: React.FC<ContactItem> = ({\r\n  name,\r\n  url,\r\n  icon,\r\n  isInternal,\r\n  badge,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const iconComp = (\r\n    <span className={classes.iconWrapper}>\r\n      <FontAwesomeIcon\r\n        className={classes.icon}\r\n        icon={icon as IconProp}\r\n        size=\"lg\"\r\n      />\r\n      {badge && <span className={classes.badge}>{badge}</span>}\r\n    </span>\r\n  );\r\n\r\n  if (isInternal) {\r\n    return (\r\n      <Link\r\n        to={url}\r\n        key={`left-bar-${name}`}\r\n        className={classes.link}\r\n        aria-label={name}\r\n        title={name}\r\n      >\r\n        {iconComp}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a\r\n      href={url}\r\n      key={`left-bar-${name}`}\r\n      className={classes.link}\r\n      aria-label={`Find me on ${name}`}\r\n      title={`Find me on ${name}`}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {iconComp}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default IconLink;\r\n","/**\r\n * ButtonLink component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport Color from 'color';\r\nimport { bgDarkBlue, textLightBlue, midBlue, sSize } from '../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    background: bgDarkBlue,\r\n    borderRadius: '4px',\r\n    color: textLightBlue,\r\n    display: 'flex',\r\n    margin: '8px',\r\n    transition: 'color 500ms ease',\r\n    '&:hover': {\r\n      background: Color(bgDarkBlue).darken(0.1).string(),\r\n    },\r\n    '&:hover .icon': {\r\n      color: midBlue,\r\n    },\r\n  },\r\n  contents: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    minHeight: '24px',\r\n    padding: '6px 10px',\r\n  },\r\n  text: {\r\n    fontSize: sSize,\r\n    fontWeight: 400,\r\n    marginLeft: '6px',\r\n  },\r\n  count: {\r\n    fontSize: sSize,\r\n    background: Color(bgDarkBlue).lighten(0.5).string(),\r\n    borderRadius: '50%',\r\n    marginLeft: '10px',\r\n    padding: '4px 8px',\r\n  },\r\n} as Styles;\r\n","/**\r\n * ButtonLink component.\r\n */\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface ButtonLinkProps {\r\n  href: string;\r\n  title: string;\r\n  text: string;\r\n  icon: IconProp;\r\n  size: SizeProp;\r\n  showCount?: boolean;\r\n  count?: number;\r\n}\r\n\r\nconst ButtonLink: React.FC<ButtonLinkProps> = ({\r\n  href,\r\n  title,\r\n  icon,\r\n  size,\r\n  text,\r\n  showCount,\r\n  count,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <a\r\n      className={classes.root}\r\n      href={href}\r\n      aria-label={title}\r\n      title={title}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <span className={classes.contents}>\r\n        <FontAwesomeIcon className=\"icon\" icon={icon} size={size || 'lg'} />\r\n        <span className={classes.text}>{text}</span>\r\n        {!!showCount && <span className={classes.count}>{count}</span>}\r\n      </span>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ButtonLink;\r\n","import { LocalCache } from '../models';\r\n\r\n/**\r\n * Builds a record object by attaching necessary field(s)\r\n * @param data Data to store\r\n */\r\nexport const buildRecordObject = <T>(data: T) => {\r\n  return {\r\n    data,\r\n    lastChecked: Date.now(),\r\n  } as LocalCache.Record<T>;\r\n};\r\n\r\n/**\r\n * Returns true if the record has expired\r\n * otherwise returns false\r\n * @param record Local storage record\r\n * @param timeout Timeout in minutes\r\n */\r\nexport const isRecordExpired = <T>(\r\n  record: LocalCache.Record<T>,\r\n  timeout: number,\r\n) => {\r\n  return Date.now() > record.lastChecked + timeout * 60 * 1000;\r\n};\r\n\r\n/**\r\n * Returns true if the record is \"usable\"\r\n * otherwise returns false\r\n * @param record Local storage record\r\n * @param timeout Timeout in minutes\r\n */\r\nexport const isRecordUsable = <T>(\r\n  record: LocalCache.Record<T>,\r\n  timeout: number,\r\n) => {\r\n  return record.data !== undefined && !isRecordExpired(record, timeout);\r\n};\r\n","/**\r\n * Generic GHButton component.\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocalStorageState } from '../../hooks';\r\nimport ButtonLink, { ButtonLinkProps } from '../ButtonLink';\r\nimport { LocalCache } from '../../models';\r\nimport { buildRecordObject, isRecordUsable } from '../../utils';\r\n\r\nexport interface GHButtonProps extends ButtonLinkProps {\r\n  resource: {\r\n    endpoint: string;\r\n    attr: string;\r\n  };\r\n}\r\n\r\nconst GHButton: React.FC<GHButtonProps & LocalCache.Prop> = ({\r\n  resource: { attr, endpoint },\r\n  timeout = 10, // 10 mins\r\n  ...btnProps\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [attrCountRecord, setAttrCountRecord] = useLocalStorageState<\r\n    number | undefined\r\n  >(attr, undefined);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async (): Promise<any> => {\r\n      const response = await fetch(endpoint);\r\n      const json = await response.json();\r\n\r\n      if (json[attr] >= 0) {\r\n        setAttrCountRecord(buildRecordObject(json[attr]));\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    if (!isRecordUsable(attrCountRecord, timeout)) {\r\n      fetchApi();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ButtonLink\r\n      {...btnProps}\r\n      showCount={!loading && attrCountRecord !== undefined}\r\n      count={attrCountRecord.data}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GHButton;\r\n","import { useState, useEffect } from 'react';\r\nimport { LocalCache } from '../models';\r\nimport { buildRecordObject } from '../utils';\r\n\r\n/**\r\n * Custom hook that uses local storage\r\n * @param key Key\r\n * @param defaultValue Default value\r\n */\r\nexport const useLocalStorageState = <T>(\r\n  key: string,\r\n  defaultValue: T,\r\n): [\r\n  LocalCache.Record<T>,\r\n  React.Dispatch<React.SetStateAction<LocalCache.Record<T>>>,\r\n] => {\r\n  const [state, setState] = useState<LocalCache.Record<T>>(() => {\r\n    const defaultObj = buildRecordObject(defaultValue);\r\n    let value;\r\n\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || JSON.stringify(defaultObj),\r\n      ) as LocalCache.Record<T>;\r\n    } catch (e) {\r\n      value = defaultObj;\r\n    }\r\n    return value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, setState];\r\n};\r\n","/**\n * MainButtons component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport ButtonLink from '../../../../components/ButtonLink';\nimport GHButton, { GHButtonProps } from '../../../../components/GHButton';\nimport { ContactItem } from '../../../../models';\nimport { getGHCredentials } from '../../../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface MainButtonsProps {\n  contactData: ContactItem[];\n  repoUrl: string;\n}\n\nconst MainButtons: React.FC<MainButtonsProps> = ({ contactData, repoUrl }) => {\n  const classes = useStyles();\n\n  const { repo, username } = getGHCredentials(repoUrl);\n\n  const ghButtons: GHButtonProps[] = [\n    // Follow button\n    {\n      resource: {\n        endpoint: `https://api.github.com/users/${username}`,\n        attr: '',\n      },\n      href: `https://github.com/${username}`,\n      title: `Follow @${username} on GitHub`,\n      icon: ['fab', 'github'],\n      size: 'lg',\n      text: `Follow @${username}`,\n    },\n  ];\n\n  const mainContact = contactData.find((c) => c.isMain) as ContactItem;\n\n  return (\n    <div className={classes.root}>\n      <div>\n        {ghButtons.map((btn) => (\n          <GHButton key={`gh-btn-${btn.resource.attr}`} {...btn} />\n        ))}\n      </div>\n      <div>\n        <ButtonLink\n          href={mainContact.url}\n          title={`Find me on ${mainContact.name}`}\n          icon={mainContact.icon as IconProp}\n          size=\"lg\"\n          text=\"Contact Me\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainButtons;\n","/**\r\n * MainButtons component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\n\r\nexport default {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: '50px',\r\n    '& div': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n} as Styles;\r\n","/**\r\n * Extracts username and repo name from given url.\r\n * @param repoUrl GitHub url\r\n */\r\nexport const getGHCredentials = (\r\n  repoUrl: string,\r\n): { username: string; repo: string } => {\r\n  const parts = new URL(repoUrl).pathname.split('/');\r\n  const repo = parts.pop() || '';\r\n  const username = parts.pop() || '';\r\n  return { repo, username };\r\n};\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport metadata from '../../data/json/metadata.json';\r\n\r\nexport interface SEOProps {\r\n  title: string;\r\n  description?: string;\r\n  lang?: string;\r\n  meta?: HTMLMetaElement[];\r\n}\r\n\r\nconst SEO: React.FC<SEOProps> = ({\r\n  title,\r\n  description,\r\n  lang = 'en',\r\n  meta = [],\r\n}) => {\r\n  const metaDescription = description || metadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s • ${metadata.title}`}\r\n      meta={[\r\n        {\r\n          name: 'description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: 'keywords',\r\n          content: metadata.keywords,\r\n        },\r\n        {\r\n          name: 'canonical',\r\n          content: metadata.homepage,\r\n        },\r\n        {\r\n          name: 'theme-color',\r\n          content: metadata.themeColor,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: metadata.title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metadata.description,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          property: `og:url`,\r\n          content: metadata.homepage,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: metadata.image,\r\n        },\r\n        {\r\n          property: `og:image:width`,\r\n          content: '320',\r\n        },\r\n        {\r\n          property: `og:image:height`,\r\n          content: '320',\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:site`,\r\n          content: metadata.homepage,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: metadata.title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metadata.description,\r\n        },\r\n        {\r\n          name: `twitter:image`,\r\n          content: metadata.image,\r\n        },\r\n        {\r\n          name: `google-site-verification`,\r\n          content: metadata.verification.google,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SEO;\r\n","/**\r\n * Greeter component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\n\r\nimport {\r\n  bgDarkBlue,\r\n  textMid,\r\n  textDark,\r\n  midBlue,\r\n  mllSize,\r\n  lSize,\r\n  breakpoints,\r\n  mlSize,\r\n  sansFont,\r\n  heights,\r\n} from '../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: `calc(100vh - ${heights.navBar + heights.statusBar}px)`,\r\n    justifyContent: 'center',\r\n    fontFamily: sansFont,\r\n  },\r\n  heading: {\r\n    color: textMid,\r\n    fontWeight: 400,\r\n    fontSize: lSize,\r\n    letterSpacing: '2px',\r\n    margin: '10px 20px',\r\n    padding: '0',\r\n    textShadow: `5px 5px ${bgDarkBlue}`,\r\n    userSelect: 'none',\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      fontSize: mllSize,\r\n    },\r\n  },\r\n  typedWrap: {\r\n    color: textDark,\r\n    fontSize: mllSize,\r\n    fontWeight: 400,\r\n    margin: '5px',\r\n    padding: '0',\r\n    userSelect: 'none',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      borderBottom: `1px dashed ${textDark}`,\r\n    },\r\n    '& strong': {\r\n      fontWeight: '500',\r\n    },\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      fontSize: mlSize,\r\n    },\r\n  },\r\n  '.typed-cursor': {\r\n    color: midBlue,\r\n  },\r\n} as Styles;\r\n","/**\r\n * Greeter component.\r\n */\r\nimport React, { useEffect } from 'react';\r\nimport Typed from 'typed.js';\r\nimport { createUseStyles } from 'react-jss';\r\nimport MainButtons, { MainButtonsProps } from './components/MainButtons';\r\nimport SEO from '../../components/SEO';\r\nimport { Static } from '../../models';\r\nimport { randomHello } from '../../utils';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface GreeterProps extends MainButtonsProps {\r\n  staticData: Static;\r\n}\r\n\r\nconst Greeter: React.FC<GreeterProps> = ({\r\n  staticData,\r\n  contactData,\r\n  repoUrl,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      strings: staticData.typed,\r\n      typeSpeed: 70,\r\n      backSpeed: 50,\r\n      loop: true,\r\n      smartBackspace: true,\r\n    };\r\n\r\n    const typed = new Typed('#typed-insert-point', options);\r\n\r\n    return () => {\r\n      // Make sure to destroy Typed instance on unmounting\r\n      // to prevent memory leaks\r\n      typed.destroy();\r\n    };\r\n  }, [staticData]);\r\n\r\n  const hello = randomHello();\r\n\r\n  return (\r\n    <>\r\n      <SEO title={hello} />\r\n      <section className={classes.root}>\r\n        <h1 className={classes.heading}>{staticData.mainLine}</h1>\r\n        <div className={classes.typedWrap}>\r\n          <span id=\"typed-insert-point\" style={{ whiteSpace: 'pre' }} />\r\n        </div>\r\n        <MainButtons contactData={contactData} repoUrl={repoUrl} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Greeter;\r\n","import hello from '../data/json/hello.json';\r\n\r\n/**\r\n * Says Hello in a random language.\r\n */\r\nexport const randomHello = (): string => {\r\n  const randomInt = Math.floor(Math.random() * hello.length);\r\n  return `${hello[randomInt].hello}!`;\r\n};\r\n","import React from 'react';\nimport Greeter from '../views/Greeter';\nimport { PageLink, TabLink } from '../models';\nimport { jsOrange, midBlue, green, pink } from '../theme/colors';\n\nimport staticData from './json/static.json';\nimport contactData from './json/contact.json';\nimport sweData from './json/swe.json';\nimport baData from './json/ba.json';\nimport pkg from '../../package.json';\n\nimport { calculateDiplomaProgress } from '../utils';\n\nexport const pages: PageLink[] = [\n  {\n    name: 'Home',\n    url: '/',\n    icon: 'home',\n    isInternal: true,\n    comp: () => (\n      <Greeter\n        staticData={staticData}\n        contactData={contactData}\n        repoUrl={pkg.repository.url}\n      />\n    ),\n  },\n];\n\nexport const tabs: TabLink[] = [\n  {\n    name: 'skills.js',\n    url: '/skills',\n    icon: ['fab', 'js'],\n    color: jsOrange,\n    mdFileName: 'skills',\n  },\n  {\n    name: '.educationrc',\n    url: '/education',\n    icon: 'university',\n    color: midBlue,\n    mdFileName: 'education',\n  },\n  {\n    name: 'projects.config',\n    url: '/projects',\n    icon: 'sliders-h',\n    color: green,\n    mdFileName: 'projects',\n  },\n  {\n    name: 'testimonials.online',\n    url: '/certificates',\n    icon: ['fab', 'sass'],\n    color: pink,\n    mdFileName: 'certificates',\n  },\n];\n","/**\r\n * LeftBar component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport Color from 'color';\r\nimport { bgLightBlue, breakpoints, widths } from '../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    alignItems: 'center',\r\n    background: bgLightBlue,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    height: '100vh',\r\n    position: 'fixed',\r\n    left: '0',\r\n    top: '0',\r\n    width: `${widths.leftBar}px`,\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      display: 'none',\r\n    },\r\n    '& div': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      padding: '10px 0',\r\n    },\r\n  },\r\n  divider: {\r\n    height: '1px',\r\n    background: Color(bgLightBlue).lighten(0.35).string(),\r\n    width: '95%',\r\n    marginTop: '4px',\r\n    marginBottom: '12px',\r\n  },\r\n} as Styles;\r\n","/**\r\n * LeftBar component.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport IconLink from '../../../../components/IconLink';\r\nimport { ContactItem } from '../../../../models';\r\nimport { pages } from './../../../../data';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface LeftBarProps {\r\n  contactData: ContactItem[];\r\n}\r\n\r\nconst LeftBar: React.FC<LeftBarProps> = ({ contactData }) => {\r\n  const classes = useStyles();\r\n\r\n  // Internal links.\r\n  const internals = pages.map(({ name, url, icon, isInternal, badge }) => ({\r\n    name,\r\n    url,\r\n    icon,\r\n    isInternal,\r\n    badge,\r\n  }));\r\n\r\n  const bottom: ContactItem[] = [\r\n    {\r\n      name: 'Useless button!',\r\n      url: '',\r\n      icon: 'cog',\r\n      isInternal: true,\r\n    },\r\n  ];\r\n\r\n  const renderData = (data: ContactItem[]) => {\r\n    return data.map((contactItem) => (\r\n      <IconLink key={contactItem.name} {...contactItem} />\r\n    ));\r\n  };\r\n\r\n  const renderDivider = () => <span className={classes.divider} />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        {renderData(internals)}\r\n        {renderDivider()}\r\n        {renderData(contactData)}\r\n      </div>\r\n      <div>{renderData(bottom)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftBar;\r\n","/**\r\n * Explorer component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport { widths, bgDarkBlue } from '../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    background: bgDarkBlue,\r\n    height: '100vh',\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: widths.leftBar,\r\n    width: widths.explorer,\r\n    '& li': {\r\n      listStyle: 'none',\r\n      padding: '6px 12px',\r\n    },\r\n  },\r\n  closed: {\r\n    display: 'none',\r\n  },\r\n} as Styles;\r\n","/**\r\n * Explorer component.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport clsx from 'clsx';\r\nimport { TabProps } from '../..';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface ExplorerProps {\r\n  open: boolean;\r\n}\r\n\r\nconst Explorer: React.FC<ExplorerProps & TabProps> = ({ tabs, open }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, { [classes.closed]: !open })}>\r\n      {tabs.map((t) => (\r\n        <li key={t.name}>{t.mdFileName}</li>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Explorer;\r\n","/**\r\n * StatusBar component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport {\r\n  bgDarkBlue,\r\n  bgMidBlue,\r\n  textLightBlue,\r\n  sSize,\r\n  sansFont,\r\n  heights,\r\n} from '../../../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    bottom: '0',\r\n    background: bgDarkBlue,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    fontFamily: sansFont,\r\n    fontWeight: 400,\r\n    left: '0',\r\n    position: 'fixed',\r\n    width: '100vw',\r\n    height: heights.statusBar,\r\n    '& span, & a': {\r\n      display: 'inline-block',\r\n      padding: '2px 8px',\r\n      '&:hover': {\r\n        background: bgMidBlue,\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n  },\r\n  icon: {\r\n    color: textLightBlue,\r\n  },\r\n  text: {\r\n    color: textLightBlue,\r\n    fontSize: sSize,\r\n    padding: '0 4px',\r\n  },\r\n} as Styles;\r\n","/**\r\n * StatusBar component.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from './styles';\r\nimport pkg from '../../../../../package.json';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nconst StatusBar: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={classes.root}>\r\n      <a href={pkg.repository.url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n        <FontAwesomeIcon\r\n          className={classes.icon}\r\n          icon=\"code-branch\"\r\n          size=\"xs\"\r\n          inverse\r\n        />\r\n        <span className={classes.text}>master</span>\r\n      </a>\r\n\r\n      <span>\r\n        <FontAwesomeIcon\r\n          className={classes.icon}\r\n          icon=\"smile\"\r\n          size=\"sm\"\r\n          inverse\r\n        />\r\n      </span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n","/**\r\n * Main layout styles.\r\n */\r\nimport Color from 'color';\r\nimport { Styles } from 'react-jss';\r\nimport {\r\n  bgMidBlue,\r\n  textLightBlue,\r\n  mSize,\r\n  monoFont,\r\n  breakpoints,\r\n  widths,\r\n} from '../../theme';\r\n\r\n// Notice that it's an object containing\r\n// global \"base\" values for the rest of the app.\r\nexport default {\r\n  '@global': {\r\n    html: {\r\n      fontSize: '62.5%',\r\n    },\r\n    body: {\r\n      fontFamily: monoFont,\r\n      fontSize: mSize,\r\n      background: bgMidBlue,\r\n      boxSizing: 'border-box',\r\n    },\r\n    button: {\r\n      cursor: 'pointer',\r\n      '&:disabled': {\r\n        cursor: 'default',\r\n      },\r\n    },\r\n    a: {\r\n      color: textLightBlue,\r\n      textDecoration: 'none',\r\n      transition: 'color 500ms ease',\r\n      '&:visited': {\r\n        color: Color(textLightBlue).darken(0.1).string(),\r\n      },\r\n    },\r\n    '.color-transform': {\r\n      transform: 'color 500ms ease',\r\n    },\r\n  },\r\n  root: {\r\n    position: 'absolute',\r\n    height: '100vh',\r\n    width: `calc(100% - ${widths.leftBar}px)`,\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  content: {\r\n    position: 'relative',\r\n    top: 0,\r\n    left: `${widths.leftBar}px`,\r\n    right: 0,\r\n    width: '100%',\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      left: '0',\r\n    },\r\n  },\r\n  explorerOpen: {\r\n    left: `${widths.leftBar + widths.explorer}px`,\r\n  },\r\n} as Styles;\r\n","/**\r\n * Main layout.\r\n */\r\nimport React, { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport clsx from 'clsx';\r\nimport Header from './components/Header';\r\nimport LeftBar from './components/LeftBar';\r\nimport Explorer from './components/Explorer';\r\nimport StatusBar from './components/StatusBar';\r\nimport { ContactItem, TabLink } from '../../models';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface TabProps {\r\n  tabs: TabLink[];\r\n}\r\n\r\nexport interface ContactProps {\r\n  contactData: ContactItem[];\r\n}\r\n\r\nexport type MainLayoutProps = TabProps & ContactProps;\r\n\r\nconst MainLayout: React.FC<MainLayoutProps> = ({\r\n  children,\r\n  tabs,\r\n  contactData,\r\n}) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [explorerOpen, setExplorerOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LeftBar contactData={contactData} />\r\n      <Explorer tabs={tabs} open={explorerOpen} />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.explorerOpen]: explorerOpen,\r\n        })}\r\n      >\r\n        <Header tabs={tabs} />\r\n        {children}\r\n      </main>\r\n      <StatusBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","/**\r\n * Container component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\nimport {\r\n  breakpoints,\r\n  midBlue,\r\n  textLightBlue,\r\n  textMid,\r\n  mSize,\r\n} from '../../theme';\r\n\r\nexport default {\r\n  root: {\r\n    maxWidth: '960px',\r\n    padding: '0 20px',\r\n    marginBottom: '200px',\r\n    '& a:hover': {\r\n      color: textMid,\r\n    },\r\n    '& li': {\r\n      listStyle: 'square',\r\n    },\r\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  content: {\r\n    color: textLightBlue,\r\n    fontSize: mSize,\r\n    '& h3': {\r\n      color: midBlue,\r\n    },\r\n    '& ul': {\r\n      '& li': {\r\n        paddingBottom: '4px',\r\n      },\r\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\r\n        paddingLeft: '20px',\r\n      },\r\n    },\r\n  },\r\n} as Styles;\r\n","/**\r\n * Container components used in tabs.\r\n */\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport SEO, { SEOProps } from '../SEO';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface ContainerProps {\r\n  seo?: SEOProps;\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ seo, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {!!seo && <SEO {...seo} />}\r\n      <div className={classes.root}>\r\n        <div className={classes.content}>{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","/**\r\n * MDTab component.\r\n */\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Container from '../Container';\r\nimport { createUseStyles } from 'react-jss';\r\nimport styles from './styles';\r\n\r\nconst useStyles = createUseStyles(styles);\r\n\r\nexport interface MDTabProps {\r\n  fileName: string;\r\n}\r\n\r\nconst MDTab: React.FC<MDTabProps> = ({ fileName }) => {\r\n  const [contents, setContents] = useState<string>('');\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const loadFile = async () => {\r\n      const file = await import(`../../data/tabs/${fileName}.md`);\r\n      const response = await fetch(file.default);\r\n      const text = await response.text();\r\n      setContents(text);\r\n    };\r\n    loadFile();\r\n  }, [fileName]);\r\n\r\n  return (\r\n    <Container seo={{ title: fileName }}>\r\n      <ReactMarkdown className={classes.mdpage} source={contents} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MDTab;\r\n","/**\r\n * MDTab component styles.\r\n */\r\nimport { Styles } from 'react-jss';\r\n\r\nexport default {\r\n  mdpage: {\r\n    paddingBottom: '10rem',\r\n  },\r\n} as Styles;\r\n","import React from 'react';\r\nimport { RouteComponentProps, Redirect } from '@reach/router';\r\nimport MDTab, { MDTabProps } from './components/MDTab';\r\nimport { PageProps } from './models';\r\n\r\nimport { pages, tabs } from './data/';\r\n\r\ntype ViewProps = RouteComponentProps & PageProps;\r\nconst View: React.FC<ViewProps> = ({ comp: Comp, ...rest }) => {\r\n  return <Comp {...rest} />;\r\n};\r\n\r\ntype TabProps = RouteComponentProps & MDTabProps;\r\nconst Tab: React.FC<TabProps> = ({ fileName }) => {\r\n  return <MDTab fileName={fileName} />;\r\n};\r\n\r\nexport default [\r\n  pages.map(({ name, url, comp, ...rest }) => (\r\n    <View path={url} key={name} comp={comp} {...rest} />\r\n  )),\r\n  tabs.map(({ name, url, mdFileName }) => (\r\n    <Tab path={url} key={name} fileName={mdFileName} />\r\n  )),\r\n  <Redirect key=\"notfound\" from=\"*\" to=\"/\" default noThrow />,\r\n];\r\n","import React from 'react';\r\nimport { Router } from '@reach/router';\r\nimport MainLayout from './layouts/Main';\r\nimport routes from './routes';\r\n\r\nimport { tabs } from './data';\r\nimport contactData from './data/json/contact.json';\r\n\r\nconst App: React.FC = () => (\r\n  <MainLayout tabs={tabs} contactData={contactData}>\r\n    <Router>{routes}</Router>\r\n  </MainLayout>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n/* eslint-disable */\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n/* eslint-enable */\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './theme/icons';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}